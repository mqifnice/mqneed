<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!--此文件负责整个mvc中的配置-->
	
	<!--启用spring的一些annotation -->
	<context:annotation-config/>
	
	<!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
	<mvc:annotation-driven/>
	
	<!--静态资源映射-->
	<!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
	<mvc:resources mapping="/css/**" location="/WEB-INF/statics/css/"/>
	<mvc:resources mapping="/js/**" location="/WEB-INF/statics/js/"/>
	<mvc:resources mapping="/image/**" location="/WEB-INF/statics/image/"/>
	<mvc:resources mapping="/image/**" location="/WEB-INF/statics/assests/"/>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/><!--设置JSP文件的目录位置-->
		<property name="suffix" value=".jsp"/>
		<property name="exposeContextBeansAsAttributes" value="true"/>
	</bean>
	
	<!-- 自动扫描装配 -->
	<context:component-scan base-package="com.*"/>
	<!-- 配置会话工厂SqlSessionFactory -->
	<!-- 配置dbcp数据库连接池 -->
	
	<!-- <context:property-placeholder location="classpath:db.properties"/> -->
	<!--数据库配置 -->
	<bean id = "propertyConfigurer" class = "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	
	</bean>
	
	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<property name="initialSize" value="1"/>
		<property name="maxActive" value="100"/>
		<property name="maxIdle" value="5"/>
		<property name="maxWait" value="80000"/>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:sqlmap/MessageMapper.xml"/>
		<property name="typeAliasesPackage" value="com.entity" />
	
	</bean>
	
	<!-- 在spring容器中配置mapper的扫描器产生的动态代理对象在spring的容器中自动注册，bean的id就是mapper类名（首字母小写）-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定扫描包的路径，就是mapper接口的路径，多个包中间以 半角逗号隔开   -->
		<property name="basePackage" value="com.dao"/>
		<!-- 配置sqlSessionFactoryBeanName -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
</beans>